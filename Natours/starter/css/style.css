@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  text-decoration: none;
  list-style: none;
}

html {
  font-size: 62.5%;
}

body {
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color: #777;
  padding: 3rem;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /*
        animation-delay: 3s;
        animation-iteration-count: 3;
        */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 1s ease-out;
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  transition: all 200ms 50ms;
  letter-spacing: 2px;
}

.heading-secondary:hover {
  transform: skewY(2deg) skewX(15deg) scale(1.1);
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
}

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: 1.6rem;
}

.paragraph:not(:last-child) {
  margin-bottom: 3rem;
}

.u-center-text {
  text-align: center;
}

.u-margin-bottom-big {
  margin-bottom: 8rem;
}

.u-margin-bottom-medium {
  margin-bottom: 4rem;
}

.u-margin-bottom-small {
  margin-bottom: 1.5rem;
}

.btn:link, .btn:visited {
  text-transform: uppercase;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 99em;
  transition: transform 200ms 50ms;
  position: relative;
  font-size: 1.6rem;
}

.btn:hover, .btn .btn:focus {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 999em;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 400ms 50ms;
}

.btn--white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--animated {
  animation: moveInBottom 500ms ease-out 75ms backwards;
}

.btn-text:link, .btn-text:visited {
  color: #55c57a;
  display: inline-block;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  font-size: 1.6rem;
}

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px);
}

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.composition {
  position: relative;
}

.composition__photo {
  width: 55%;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  transition: all 200ms;
  outline-offset: 2rem;
}

.composition__photo--p1 {
  left: 0;
  top: -2rem;
}

.composition__photo--p2 {
  right: 0;
  top: 2rem;
}

.composition__photo--p3 {
  left: 20%;
  top: 10rem;
}

.composition__photo:hover {
  transform: scale(1.05);
  box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
  z-index: 20;
  outline: 1.5rem solid #55c57a;
}

.composition:hover .composition__photo:not(:hover) {
  transform: scale(0.95) translateY(-0.5rem);
}

.row-first {
  display: grid;
  grid-template-columns: 1fr 1fr;
  max-width: 114rem;
  margin: 0 auto;
  grid-column-gap: 1.6rem;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.btn:link, .btn:visited {
  text-transform: uppercase;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 99em;
  transition: transform 200ms 50ms;
  position: relative;
  font-size: 1.6rem;
}

.btn:hover, .btn .btn:focus {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 999em;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 400ms 50ms;
}

.btn--white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--animated {
  animation: moveInBottom 500ms ease-out 75ms backwards;
}

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UvX2FuaW1hdGlvbnMuc2NzcyIsImJhc2UvX2Jhc2Uuc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsImFic3RyYWN0cy9fdmFyaWFibGVzLnNjc3MiLCJiYXNlL191dGlsaXRpZXMuc2NzcyIsImNvbXBvbmVudHMvX2J1dHRvbi5zY3NzIiwiY29tcG9uZW50cy9fY29tcG9zaXRpb24uc2NzcyIsImxheW91dC9fZ3JpZC5zY3NzIiwibGF5b3V0L19oZWFkZXIuc2NzcyIsImxheW91dC9fbmF2aWdhdGlvbi5zY3NzIiwicGFnZXMvX2hvbWUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLENBQVYsVUFBVTtFQUNOLEVBQUU7SUFDRSxPQUFPLEVBQUUsQ0FBQztJQUNWLFNBQVMsRUFBRSxrQkFBa0I7O0VBR2pDLEdBQUc7SUFDQyxTQUFTLEVBQUUsZ0JBQWdCOztFQUcvQixJQUFJO0lBQ0EsT0FBTyxFQUFFLENBQUM7SUFDVixTQUFTLEVBQUUsWUFBWTs7OztBQUkvQixVQUFVLENBQVYsV0FBVTtFQUNOLEVBQUU7SUFDRSxPQUFPLEVBQUUsQ0FBQztJQUNWLFNBQVMsRUFBRSxpQkFBaUI7O0VBR2hDLEdBQUc7SUFDQyxTQUFTLEVBQUUsaUJBQWlCOztFQUdoQyxJQUFJO0lBQ0EsT0FBTyxFQUFFLENBQUM7SUFDVixTQUFTLEVBQUUsWUFBWTs7OztBQUkvQixVQUFVLENBQVYsWUFBVTtFQUNOLEVBQUU7SUFDRSxPQUFPLEVBQUUsQ0FBQztJQUNWLFNBQVMsRUFBRSxnQkFBZ0I7O0VBRy9CLElBQUk7SUFDQSxPQUFPLEVBQUUsQ0FBQztJQUNWLFNBQVMsRUFBRSxZQUFZOzs7O0FDeEMvQixDQUFDO0FBQ0QsQ0FBQyxPQUFPO0FBQ1IsQ0FBQyxRQUFRLENBQUM7RUFDTixNQUFNLEVBQUUsQ0FBQztFQUNULE9BQU8sRUFBRSxDQUFDO0VBQ1YsVUFBVSxFQUFFLE9BQU87RUFDdEIsZUFBZSxFQUFFLElBQUk7RUFDckIsVUFBVSxF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LENBQUMsQ0FBQyxNQUFLLENBQUMsSUFBSSxDTkFsQixrQkFBSTtDTUNiOztBQUVELFdBQVEsQ0FBQztFQUNMLGdCQUFnQixFTkxWLElBQUk7RU1NVixLQUFLLEVOVkssSUFBSTtDTVdqQjs7QUFmTCxBQWlCSSxJQWpCQSxBQWlCQSxPQUFRLENBQUM7RUFDTCxPQUFPLEVBQUUsRUFBRTtFQUNYLE9BQU8sRUFBRSxZQUFZO0VBQ3JCLE1BQU0sRUFBRSxJQUFJO0VBQ1osS0FBSyxFQUFFLElBQUk7RUFDWCxhQUFhLEVBQUUsS0FBSztFQUNwQixRQUFRLEVBQUUsUUFBUTtFQUNsQixHQUFHLEVBQUUsQ0FBQztFQUNOLElBQUksRUFBRSxDQUFDO0VBQ1AsT0FBTyxFQUFFLEVBQUU7RUFDWCxVQUFVLEVBQUUsY0FBYztDQUM3Qjs7QUFFRCxXQUFRLE9BQU8sQ0FBQztFQUNaLGdCQUFnQixFTnZCVixJQUFJO0NNd0JiOztBQWhDTCxBQWtDSSxJQWxDQSxBQWtDQSxNQUFPLE9BQU8sQ0FBQztFQUNYLFNBQVMsRUFBRSxXQUFXLENBQUMsV0FBVztFQUNsQyxPQUFPLEVBQUUsQ0FBQztDQUNiOztBQUVELGNBQVcsQ0FBQztFQUNSLFNBQVMsRUFBRSwwQ0FBMEM7Q0FDeEQ7O0FDbkRMLGNBQWMsQ0FBQztFQUNYLGdCQUFnQixFUFVDLE9BQU87RU9UeEIsT0FBTyxFQUFFLE9BQU87RUFDaEIsVUFBVSxFQUFFLEtBQUs7Q0FDcEIiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGtleWZyYW1lcyBtb3ZlSW5MZWZ0IHtcclxuICAgIDAlIHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTByZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIDgwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDFyZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIDEwMCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgbW92ZUluUmlnaHQge1xyXG4gICAgMCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwcmVtKTtcclxuICAgIH1cclxuXHJcbiAgICA4MCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMXJlbSk7XHJcbiAgICB9XHJcblxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwKTtcclxuICAgIH1cclxufVxyXG5cclxuQGtleWZyYW1lcyBtb3ZlSW5Cb3R0b20ge1xyXG4gICAgMCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDNyZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIDEwMCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCk7XHJcbiAgICB9XHJcbn0iLCIqLFxyXG4qOjphZnRlcixcclxuKjo6YmVmb3JlIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5odG1sIHtcclxuICAgIC8vIFRoaXMgZGVmaW5lcyB3aGF0IDFyZW0gaXNcclxuICAgIGZvbnQtc2l6ZTogNjIuNSU7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufSIsImJvZHkge1xyXG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIC8qZm9udC1zaXplOiAxNnB4OyovXHJcbiAgICBsaW5lLWhlaWdodDogMS43O1xyXG4gICAgY29sb3I6ICRjb2xvci1ncmV5LWRhcms7XHJcbiAgICBwYWRkaW5nOiAzcmVtO1xyXG59XHJcblxyXG4uaGVhZGluZy1wcmltYXJ5IHtcclxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cclxuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgIG1hcmdpbi1ib3R0b206IDZyZW07XHJcblxyXG4gICAgJi0tbWFpbiB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgZm9udC1zaXplOiA2cmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDMuNXJlbTtcclxuICAgIFxyXG4gICAgICAgIGFuaW1hdGlvbi1uYW1lOiBtb3ZlSW5MZWZ0O1xyXG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XHJcbiAgICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XHJcbiAgICBcclxuICAgICAgICAvKlxyXG4gICAgICAgIGFuaW1hdGlvbi1kZWxheTogM3M7XHJcbiAgICAgICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMztcclxuICAgICAgICAqL1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmLS1zdWIge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxLjc1cmVtO1xyXG4gICAgICAgIGFuaW1hdGlvbjogbW92ZUluUmlnaHQgMXMgZWFzZS1vdXQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG59XHJcblxyXG4uaGVhZGluZy1zZWNvbmRhcnkge1xyXG4gICAgZm9udC1zaXplOiAzLjVyZW07XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgJGNvbG9yLXByaW1hcnktbGlnaHQsICRjb2xvci1wcmltYXJ5LWRhcmspO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xyXG4gICAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XHJcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMjAwbXMgNTBtcztcclxuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2tld1koMmRlZykgc2tld1goMTVkZWcpIHNjYWxlKDEuMSk7XHJcbiAgICAgICAgdGV4dC1zaGFkb3c6IC41cmVtIDFyZW0gMnJlbSByZ2JhKCRjb2xvci1ibGFjaywgLjIpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaGVhZGluZy10ZXJ0aWFyeSB7XHJcbiAgICBmb250LXNpemU6ICRkZWZhdWx0LWZvbnQtc2l6ZTtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgXHJcbn1cclxuXHJcbi5wYXJhZ3JhcGgge1xyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICBcclxuICAgICY6bm90KDpsYXN0LWNoaWxkKSB7XHJcbiAgICAgICBtYXJnaW4tYm90dG9tOiAzcmVtOyBcclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIiwiLy8gQ09MT1JTXHJcbiRjb2xvci1wcmltYXJ5OiAjNTVjNTdhO1xyXG4kY29sb3ItcHJpbWFyeS1saWdodDogIzdlZDU2ZjtcclxuJGNvbG9yLXByaW1hcnktZGFyazogIzI4YjQ4NTtcclxuXHJcbiRjb2xvci1zZWNvbmRhcnktbGlnaHQ6ICNmZmI5MDA7XHJcbiRjb2xvci1zZWNvbmRhcnktZGFyazogI2ZmNzczMDtcclxuXHJcbiRjb2xvci10ZXJ0aWFyeS1saWdodDogIzI5OThmZjtcclxuJGNvbG9yLXRlcnRpYXJ5LWRhcms6ICM1NjQzZmE7XHJcblxyXG4kY29sb3ItZ3JleS1saWdodC0xOiAjZjdmN2Y3O1xyXG4kY29sb3ItZ3JleS1saWdodC0yOiAjZWVlO1xyXG5cclxuJGNvbG9yLWdyZXktZGFyazogIzc3NztcclxuJGNvbG9yLWdyZXktZGFyay0yOiAjOTk5O1xyXG4kY29sb3ItZ3JleS1kYXJrLTM6ICMzMzM7XHJcblxyXG4kY29sb3Itd2hpdGU6ICNmZmY7XHJcbiRjb2xvci1ibGFjazogIzAwMDtcclxuXHJcblxyXG4vLyBGT05UXHJcbiRkZWZhdWx0LWZvbnQtc2l6ZTogMS42cmVtO1xyXG5cclxuXHJcbi8vIEdSSURcclxuJGdyaWQtd2lkdGg6IDExNHJlbTtcclxuJGd1dHRlci12ZXJ0aWNhbDogOHJlbTtcclxuJGd1dHRlci1ob3Jpem9udGFsOiA2cmVtOyIsIi51LWNlbnRlci10ZXh0IHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnUtbWFyZ2luLWJvdHRvbS1iaWcge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogOHJlbTtcclxufVxyXG5cclxuLnUtbWFyZ2luLWJvdHRvbS1tZWRpdW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNHJlbTtcclxufVxyXG5cclxuLnUtbWFyZ2luLWJvdHRvbS1zbWFsbCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbiIsIlxyXG4uYnRuIHtcclxuICAgIFxyXG4gICAgJjpsaW5rLCAmOnZpc2l0ZWQge1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgcGFkZGluZzogMS41cmVtIDRyZW07XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDk5ZW07XHJcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDIwMG1zIDUwbXM7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJGRlZmF1bHQtZm9udC1zaXplO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOmhvdmVyLCAuYnRuOmZvY3VzIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTNweCk7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMCAxcmVtIDJyZW0gcmdiYSgkY29sb3ItYmxhY2ssLjIpO1xyXG4gICAgfVxyXG5cclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMCAuNXJlbSAxcmVtIHJnYmEoJGNvbG9yLWJsYWNrLC4yKTtcclxuICAgIH1cclxuXHJcbiAgICAmLS13aGl0ZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3ItZ3JleS1kYXJrO1xyXG4gICAgfVxyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOTk5ZW07XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCA0MDBtcyA1MG1zO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXdoaXRlOjphZnRlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXI6OmFmdGVyIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxLjQpIHNjYWxlWSgxLjYpO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tYW5pbWF0ZWQge1xyXG4gICAgICAgIGFuaW1hdGlvbjogbW92ZUluQm90dG9tIDUwMG1zIGVhc2Utb3V0IDc1bXMgYmFja3dhcmRzO1xyXG4gICAgfVxyXG4gICAgICAgIFxyXG4gICAgIFxyXG59XHJcblxyXG4uYnRuLXRleHQge1xyXG4gICAgICAgICY6bGluaywgJjp2aXNpdGVkIHtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvci1wcmltYXJ5O1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY29sb3ItcHJpbWFyeTtcclxuICAgICAgICAgICAgcGFkZGluZzogM3B4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6ICRkZWZhdWx0LWZvbnQtc2l6ZTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItcHJpbWFyeTtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMCAxcmVtIDJyZW0gcmdiYSgkY29sb3ItYmxhY2ssIC4xNSk7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjphY3RpdmUge1xyXG4gICAgICAgICAgIGJveC1zaGFkb3c6IDAgLjVyZW0gMXJlbSByZ2JhKCRjb2xvci1ibGFjaywgLjE1KTsgXHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICB9XHJcblxyXG4iLCIuY29tcG9zaXRpb24ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgXHJcbiAgICAmX19waG90byB7XHJcbiAgICAgICB3aWR0aDogNTUlO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDAgMS41cmVtIDRyZW0gcmdiYSgkY29sb3ItYmxhY2ssIC40KTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHotaW5kZXg6IDEwO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAyMDBtcztcclxuICAgICAgICBvdXRsaW5lLW9mZnNldDogMnJlbTtcclxuICAgICAgICBcclxuICAgICAgICAmLS1wMSB7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHRvcDogLTJyZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICYtLXAyIHtcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIHRvcDogMnJlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJi0tcDMge1xyXG4gICAgICAgICAgICBsZWZ0OiAyMCU7XHJcbiAgICAgICAgICAgIHRvcDogMTByZW1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMi41cmVtIDRyZW0gcmdiYSgkY29sb3ItYmxhY2ssIC41KTtcclxuICAgICAgICAgICAgei1pbmRleDogMjA7XHJcbiAgICAgICAgICAgIG91dGxpbmU6IDEuNXJlbSBzb2xpZCAkY29sb3ItcHJpbWFyeTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6aG92ZXIgJl9fcGhvdG86bm90KDpob3Zlcikge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoLjk1KSB0cmFuc2xhdGVZKC0uNXJlbSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsIi5yb3ctZmlyc3Qge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgIG1heC13aWR0aDogJGdyaWQtd2lkdGg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIGdyaWQtY29sdW1uLWdhcDogMS42cmVtO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsIi5oZWFkZXIge1xyXG4gICAgaGVpZ2h0OiA5NXZoO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxyXG4gICAgICAgIHRvIHJpZ2h0IGJvdHRvbSxcclxuICAgICAgICByZ2JhKCRjb2xvci1wcmltYXJ5LWxpZ2h0LCAwLjgpLFxyXG4gICAgICAgIHJnYmEoJGNvbG9yLXByaW1hcnktZGFyaywgMC44KSksXHJcbiAgICB1cmwoLi4vaW1nL2hlcm8uanBnKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAtd2Via2l0LWNsaXAtcGF0aDogcG9seWdvbigwIDAsIDEwMCUgMCwgMTAwJSA3NXZoLCAwIDEwMCUpO1xyXG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDAgMCwgMTAwJSAwLCAxMDAlIDc1dmgsIDAgMTAwJSk7XHJcblxyXG4gICAgJl9fbG9nby1ib3gge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDRyZW07XHJcbiAgICAgICAgbGVmdDogNHJlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgICBoZWlnaHQ6IDMuNXJlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGV4dC1ib3gge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDQwJTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG59IiwiLmJ0bjpsaW5rLCAuYnRuOnZpc2l0ZWQge1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIHBhZGRpbmc6IDEuNXJlbSA0cmVtO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOTllbTtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyMDBtcyA1MG1zO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbn1cclxuXHJcbi5idG4ge1xyXG4gICAgXHJcbiAgICAmOmhvdmVyLCAuYnRuOmZvY3VzIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTNweCk7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMCAxcmVtIDJyZW0gcmdiYSgkY29sb3ItYmxhY2ssLjIpO1xyXG4gICAgfVxyXG5cclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMCAuNXJlbSAxcmVtIHJnYmEoJGNvbG9yLWJsYWNrLC4yKTtcclxuICAgIH1cclxuXHJcbiAgICAmLS13aGl0ZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3ItZ3JleS1kYXJrO1xyXG4gICAgfVxyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOTk5ZW07XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCA0MDBtcyA1MG1zO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXdoaXRlOjphZnRlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXI6OmFmdGVyIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxLjQpIHNjYWxlWSgxLjYpO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tYW5pbWF0ZWQge1xyXG4gICAgICAgIGFuaW1hdGlvbjogbW92ZUluQm90dG9tIDUwMG1zIGVhc2Utb3V0IDc1bXMgYmFja3dhcmRzO1xyXG4gICAgfVxyXG5cclxuICAgIFxyXG59XHJcblxyXG4iLCIuc2VjdGlvbi1hYm91dCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItZ3JleS1saWdodC0xOyBcclxuICAgIHBhZGRpbmc6IDI1cmVtIDA7XHJcbiAgICBtYXJnaW4tdG9wOiAtMjB2aDtcclxufVxyXG5cclxuXHJcbiJdfQ== */
